resources:
  App\Entity\Project:
    normalizationContext:
      groups: ['project_read']

    operations:
      ApiPlatform\Metadata\Delete:
        security: 'is_granted("PROJECT_DELETE", object)'
      ApiPlatform\Metadata\Get:
        security: 'is_granted("PROJECT_READ", object)'
      ApiPlatform\Metadata\GetCollection:
        filters: ['app.custom.search_filter', 'app.custom.order_filter']
      ApiPlatform\Metadata\Put:
        security: 'is_granted("PROJECT_UPDATE", object)'

        denormalizationContext:
          groups: ['project_update']

      # Create project
      create_project:
        class: ApiPlatform\Metadata\Post
        controller: App\Controller\Action\Project\CreateProject
        input: App\DTO\Project\ProjectDTO
        method: POST
        uriTemplate: /projects/create_project

        openapi:
          summary: Creates a new project.
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    name:
                      type: string
                      required: true
                    description:
                      type: string
                      required: false
                    link:
                      type: string
                      required: false

          responses:
            200:
              description: OK
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      message:
                        type: string

    properties:
      users:
        subresource:
          resourceClass: App\Entity\User
          collection: false
          maxDepth: 1
