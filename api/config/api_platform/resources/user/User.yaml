resources:
  App\Entity\User:
    normalizationContext:
      groups: ['user_read']

    operations:
      ApiPlatform\Metadata\Delete:
        security: 'is_granted("USER_DELETE", object)'
      ApiPlatform\Metadata\Get:
        security: 'is_granted("USER_READ", object)'
      ApiPlatform\Metadata\GetCollection:
        filters: ['app.custom.search_filter', 'app.custom.order_filter']
        security: 'is_granted("USER_READ", object)'

      # User register
      user_register:
        class: ApiPlatform\Metadata\Post
        controller: App\Controller\Action\User\Register
        method: POST
        uriTemplate: /users/user_register

        denormalizationContext:
          groups: ['user_register']

        openapi:
          summary: Register a new user.

      # Resend activation E-Mail
      resend_activation_email:
        class: ApiPlatform\Metadata\Post
        controller: App\Controller\Action\User\ResendActivationEmail
        deserialize: false
        method: POST
        uriTemplate: /users/resend_activation_email

        openapi:
          summary: Sends activation E-Mail to inactive user.
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    email:
                      type: string
                      required: true

          responses:
            200:
              description: OK
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      message:
                        type: string

      # Activate user account
      activate_user_account:
        class: ApiPlatform\Metadata\Put
        controller: App\Controller\Action\User\ActivateAccount
        deserialize: false
        method: PUT
        uriTemplate: /users/{id}/activate_user_account

        denormalizationContext:
          groups: ['user_activate']

        openapi:
          summary: Activates a user account.

      # Request reset password
      request_reset_password:
        class: ApiPlatform\Metadata\Post
        controller: App\Controller\Action\User\RequestResetPassword
        deserialize: false
        method: POST
        uriTemplate: /users/request_reset_password

        openapi:
          summary: Request an E-Mail with a URL to reset a user password.
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    email:
                      type: string
                      required: true

          responses:
            200:
              description: OK
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      message:
                        type: string

      # Reset password
      reset_password:
        class: ApiPlatform\Metadata\Put
        controller: App\Controller\Action\User\ResetPassword
        deserialize: false
        method: PUT
        uriTemplate: /users/{id}/reset_password

        openapi:
          summary: Reset user password.
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    resetPasswordToken:
                      type: string
                      required: true
                    password:
                      type: string
                      required: true

          responses:
            200:
              description: OK
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      message:
                        type: string

      # Change password
      change_password:
        class: ApiPlatform\Metadata\Put
        controller: App\Controller\Action\User\ChangePassword
        deserialize: false
        method: PUT
        uriTemplate: /users/{id}/change_password

        openapi:
          summary: Changes user password.
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    oldPassword:
                      type: string
                      required: true
                    newPassword:
                      type: string
                      required: true

      # Upload avatar:
      upload_avatar:
        class: ApiPlatform\Metadata\Post
        controller: App\Controller\Action\User\UploadAvatar
        deserialize: false
        method: POST
        uriTemplate: /users/{id}/avatar

        openapi:
          summary: Updates the user avatar.
          requestBody:
            content:
              multipart/form-data:
                schema:
                  type: object
                  properties:
                    avatar:
                      type: string
                      format: binary

      # Google OAuth
      google_oauth:
        class: ApiPlatform\Metadata\Get
        controller: App\Controller\Action\Google\Authorization
        deserialize: false
        method: GET
        uriTemplate: /users/google/oauth

        openapi:
          summary: OAuth with Google.
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    code:
                      type: string
                      required: true

            responses:
              200:
                description: OK
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        token:
                          type: string

      # Get user projects
      get_user_projects:
        class: ApiPlatform\Metadata\Get
        controller: App\Controller\Action\User\GetUserProjects
        method: GET
        uriTemplate: /users/{id}/get_user_projects

        openapi:
          summary: Retrieve a user projects.

    properties:
      projects:
        subresource:
          resourceClass: App\Entity\Project
          collection: true
          maxDepth: 2
